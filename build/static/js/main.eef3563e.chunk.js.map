{"version":3,"sources":["components/login.js","components/register.js","components/Post.js","actions/types.js","actions/post.actions.js","containers/Posts.js","components/HomePost.js","containers/Home.js","containers/CreatePost.js","containers/EditPost.js","App.js","serviceWorker.js","reducers/postReducer.js","reducers/index.js","index.js"],"names":["Login","props","logindetail","event","setState","target","name","value","console","log","state","handlelogin","preventDefault","axios","get","then","res","details","data","catch","err","counter","i","length","password","localStorage","setItem","getItem","loggedIn","alert","this","to","className","align","onSubmit","type","placeholder","onChange","Component","Registration","handleall","handlesubmit","obj","email","post","result","Post","onDelete","onEdit","title","style","fontSize","alt","src","image","content","agegroup","href","link","color","categories","onClick","id","ADD_POST","ADD_POST_ERROR","DELETE_POST","DELETE_POST_ERROR","EDIT_POST","EDIT_POST_ERROR","FETCH_POSTS","FETCH_POSTS_ERROR","FETCH_POSTS_LOADING","url","createPost","ID","dispatch","updatePost","isLoading","createPostLoading","response","createPostSuccess","history","push","error","createPostError","payload","errorPayload","message","status","put","updatePostError","deletePostSuccess","deletePostError","fetchAllPostsErrors","fetchAllPostsLoading","loggedin","Posts","handleEdit","bind","tokendata","role","errors","removeItem","posts","map","connect","postsData","delete","deletePost","HomePost","Home","CreatePost","e","onAdd","handleReset","location","handleSubmit","defaultValue","handleValueChange","EditPost","Content","Layout","Header","Footer","App","handleClick","current","key","pathname","textAlign","theme","mode","Item","padding","path","exact","render","isLogged","Boolean","window","hostname","match","defaultState","postReducer","action","updatedPosts","filter","filteredPosts","combineReducers","createBrowserHistory","forceRefresh","store","createStore","rootReducer","applyMiddleware","thunk","a","fetchAllPosts","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.eef3563e.chunk.js","sourcesContent":["import React, { Component, useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./login.css\"\nimport { Link } from \"react-router-dom\";\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      password: \"\",\n      loggedIn: false,\n      details: [],\n    };\n  }\n\n  logindetail = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n    console.log(this.state);\n  };\n\n  handlelogin = (event) => {\n    event.preventDefault();\n    axios\n      .get(\"https://5fb6896e36e2fa00166a5837.mockapi.io/api/data/users\")\n      .then((res) => {\n        //   console.log(res.data)\n        this.setState({\n          details: res.data,\n        });\n      })\n      .catch((err) => console.log(err));\n    //   console.log(this.state.details)\n\n    var counter=0;\n   for(let i=0;i<this.state.details.length;i++){\n     counter++\n       if(this.state.details[i].name==this.state.name && this.state.details[i].password==this.state.password){\n         localStorage.setItem('token',\"xndwejdvejevfwjdvdvwdjwvd\")\n         console.log(\"Log in Token\",localStorage.getItem('token'));\n         this.state.loggedIn= true;\n           break;\n       }\n       else if(counter==this.state.details.length){\n          alert(`User Account is not Authorized, Check UserId/Password`);\n       }\n   }\n\n  };\n\n  render() {\n    if (this.state.loggedIn) {\n      return <Redirect to=\"/blogs\" />\n    }\n    \n    return (\n      <div className=\"main\"> \n                  <h2 align=\"center\">Login</h2>\n\n        <form onSubmit={this.handlelogin} className=\"form\">\n          <input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Enter your usename\"\n            onChange={this.logindetail}\n          />\n          <br />\n          <input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Enter your password\"\n            onChange={this.logindetail}\n          />\n          <br />\n          <input type=\"submit\" value=\"LogIn\" className=\"button\"/>\n          <button className=\"button\">\n            <Link to=\"/register\">SignUp</Link>\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\nexport default Login;\n","import React, {Component} from 'react';\nimport axios from \"axios\";\nimport \"./registration.css\";\nimport {Redirect,Link} from \"react-router-dom\";\nclass Registration extends Component{\n \n    constructor(props){\n        super(props);\n        this.state={\n            name: \"\",\n            email: \"\",\n            password: \"\"\n        }\n    }\n    handleall=(event)=>{\n    this.setState({[event.target.name]: event.target.value})\n    }\n\n    handlesubmit=(event)=>{\n        event.preventDefault();\n        const obj = {\n            name: this.state.name,\n            email: this.state.email,\n            \n            password: this.state.password\n            \n           \n        }\n        console.log(obj)\n        axios.post(\"https://5fb6896e36e2fa00166a5837.mockapi.io/api/data/users\", obj)\n            .then((result) => {\n            console.log(result.data);\n            })\n            .catch(err => console.log(err))\n\n         alert(\"Resigtration Successful\")   \n      \n    }\n    render(){\n    return(\n        <div className=\"main\">\n            <h2 align=\"center\">Register</h2>\n            <form onSubmit={this.handlesubmit} className=\"formm\">\n            <label>Name</label>\n            <input type=\"text\"  name=\"name\"  placeholder=\"Name\" value={this.state.name} onChange={this.handleall} />\n            <label>Email</label>\n            <input type=\"email\" name=\"email\" placeholder=\"Email\" value={this.state.email} onChange={this.handleall} />\n            <label>Password</label>\n            <input type=\"password\" name=\"password\" placeholder=\"Password\" value={this.state.password} onChange={this.handleall} /><br/>\n            <input type=\"submit\" value=\"Submit\"/>\n            <Link to=\"./login\">Back to login page</Link>\n            <div className=\"login\"></div>\n            </form>\n        </div>\n    );\n    }\n}\nexport default Registration;","import React from 'react';\nimport './Post.css'\nimport { Image, Button} from 'antd';\nimport Meta from 'antd/lib/card/Meta';\n\nconst Post = ({post, onDelete, onEdit}) => {console.log(post.title)\n    return (\n        \n        \n        <div className=\"imageCard\">\n        \n        <Meta\n                style={{ fontSize: \"150px\"}}\t\t\n                title={post.title}\n            />\n        <hr></hr>\n        \n      \n            \n            <Image align=\"center\" alt=\"Blog Image\" src={post.image}></Image> \n          \n            <p>Content: {post.content}</p>\n            <h5>Email: {post.email}</h5>\n            <h5>Age Group: {post.agegroup}</h5>\n            <a href={post.link} style= {{align:\"center\", color:\"#FF00FF\"}} >Reference:{post.link} </a>\n            <h5>Category: {post.categories}</h5>\n            <Button type=\"primary\" onClick={() => onEdit(post)} >Edit</Button>\n            <Button type=\"primary\" onClick={() => onDelete(post.id)} >Delete</Button>\n\n\n            </div>\n   \n    );\n}\n\nexport default Post;","export const ADD_POST = 'ADD_POST';\nexport const ADD_POST_ERROR = 'ADD_POST_ERROR';\nexport const ADD_POST_LOADING = 'ADD_POST_LOADING';\n\nexport const DELETE_POST = 'DELETE_POST';\nexport const DELETE_POST_ERROR = 'DELETE_POST_ERROR';\nexport const DELETE_POST_LOADING = 'DELETE_POST_LOADING';\n\nexport const EDIT_POST = 'EDIT_POST';\nexport const EDIT_POST_ERROR = 'EDIT_POST_ERROR';\nexport const EDIT_POST_LOADING = 'EDIT_POST_LOADING';\n\nexport const FETCH_POSTS = 'FETCH_POSTS';\nexport const FETCH_POSTS_ERROR = 'FETCH_POSTS_ERROR';\nexport const FETCH_POSTS_LOADING = 'FETCH_POSTS_LOADING';\n","import { ADD_POST, \n        ADD_POST_ERROR,\n        ADD_POST_LOADING,\n        EDIT_POST,       \n        EDIT_POST_ERROR,\n        DELETE_POST,\n        DELETE_POST_ERROR,\n        FETCH_POSTS,     \n        FETCH_POSTS_ERROR,\n        FETCH_POSTS_LOADING,\n        // EDIT_A_POST,\n        // EDIT_A_POST_ERROR,\n        // EDIT_A_POST_LOADING,\n    } from './types';\nimport axios from 'axios';\nimport { history } from '../index';\n\nconst url = 'https://5fb6896e36e2fa00166a5837.mockapi.io/api/data/blogdata';\n// export const editPost = (post) => {\n//     if (post.id) {\n//        const data = {\n//            ID: post.id,\n//            title: post.title,\n//            content: post.content,\n//            agegroup: post.agegroup,\n//                // Image: post.image,\n//                // Link: post.link,\n//                // Categories:post.categories,\n//        };\n\n//        return (dispatch) => {\n//            updatePost(dispatch, data);\n//        }\n\n//    } else {\n//        const data = {\n//            title: post.title,\n//            content: post.content,\n//            agegroup: post.agegroup,\n//        };\n//        let isLoading = true;\n\n//        return (dispatch) => {\n//            if (isLoading) {\n//                dispatch(editPostLoading(isLoading));\n//            }\n\n//            return axios.post(url, data)\n//                .then(response => {                \n//                    const id = response.data;\n\n//                    return axios.get(`${url}/${id}`).then(response => {\n//                        isLoading = false;\n//                        dispatch(editPostLoading(isLoading));     \n//                        dispatch(editPostSuccess(response.data));\n//                        history.push('/');\n//                    }).catch((error) => {\n//                        isLoading = false;\n//                        dispatch(editPostLoading(isLoading));     \n//                        dispatch(editPostError(error));\n//                    });\n//                }).catch(error => { \n//                    dispatch(editPostError(error));\n//                });\n//        };\n//    }\n// };\n\n// export const editPostSuccess = (post) => {    \n//    return {\n//        type: EDIT_A_POST,\n//        payload: {\n//            id: post.ID,\n//            title: post.title,\n//            agegroup:post.agegroup,\n//            content:post.content,\n//        }\n//    };\n// };\n\n// export const editPostError = (error) => {\n//    const errorPayload = {\n//        message: error.response.data.message,\n//        status: error.response.status,\n//    };\n\n//    return {\n//        type: EDIT_A_POST_ERROR,\n//        payload: errorPayload,\n//    };\n// };\n\n// export const editPostLoading = (isLoading) => {\n//    return {\n//        type: EDIT_A_POST_LOADING,\n//        payload: isLoading,\n//    };\n// };\nexport const createPost = (post) => {\n     if (post.id) {\n        const data = {\n            ID: post.id,\n            title: post.title,\n            content: post.content,\n            agegroup: post.agegroup,\n                image: post.image,\n                link: post.link,\n                categories:post.categories,\n        };\n\n        return (dispatch) => {\n            updatePost(dispatch, data);\n        }\n\n    } else {\n        const data = {\n            title: post.title,\n            content: post.content,\n            agegroup: post.agegroup,\n        };\n        let isLoading = true;\n\n        return (dispatch) => {\n            if (isLoading) {\n                dispatch(createPostLoading(isLoading));\n            }\n\n            return axios.post(url, data)\n                .then(response => {                \n                    const id = response.data;\n\n                    return axios.get(`${url}/${id}`).then(response => {\n                        isLoading = false;\n                        dispatch(createPostLoading(isLoading));     \n                        dispatch(createPostSuccess(response.data));\n                        history.push('/');\n                    }).catch((error) => {\n                        isLoading = false;\n                        dispatch(createPostLoading(isLoading));     \n                        dispatch(createPostError(error));\n                    });\n                }).catch(error => { \n                    dispatch(createPostError(error));\n                });\n        };\n    }\n};\n\nexport const createPostSuccess = (post) => {    \n    return {\n        type: ADD_POST,\n        payload: {\n            id: post.ID,\n            title: post.title,\n            agegroup:post.agegroup,\n            content:post.content,\n        }\n    };\n};\n\nexport const createPostError = (error) => {\n    const errorPayload = {\n        message: error.response.data.message,\n        status: error.response.status,\n    };\n\n    return {\n        type: ADD_POST_ERROR,\n        payload: errorPayload,\n    };\n};\n\nexport const createPostLoading = (isLoading) => {\n    return {\n        type: ADD_POST_LOADING,\n        payload: isLoading,\n    };\n};\n\nexport const updatePostError = (error) => {\n    const errorPayload = {\n        message: error.response.data.message ? error.response.data.message : error.response.data,\n        status: error.response.status,\n    };\n\n    return {\n        type: EDIT_POST_ERROR,\n        payload: errorPayload,\n    };\n};\n\nexport const updatePostSuccess = (post) => {\n    return {\n        type: EDIT_POST,\n        payload: {\n            id: post.ID,\n            title: post.title,\n            agegroup:post.agegroup,\n            content:post.content,\n        },\n    };\n};\n\nexport const updatePost = (dispatch, data) => {\n    const id = data.ID;\n    console.log(data);\n    return axios.put(`${url}/${id}`, data) \n        .then(response => {\n            console.log(response.data);\n\n            return axios.get(`${url}/${id}`).then(response => {\n                    dispatch(updatePostSuccess(response.data));\n                    history.push('/');\n                }).catch(error => {\n                    dispatch(updatePostError(error));\n                })\n        })\n        .catch(error => {\n            // dispatch(updatePostError(error));\n        });\n}\n\nexport const deletePost = (id) => {\n    return (dispatch) => {\n        return axios.delete(`${url}/${id}`).then(() => {\n            dispatch(deletePostSuccess(id));\n        }).catch(error => {\n            dispatch(deletePostError(error));\n        });\n    }\n};\n\nexport const deletePostSuccess = (id) => {\n    return {\n        type: DELETE_POST,\n        payload: {\n            id: id,\n        },\n    };\n};\n\nexport const deletePostError = (error) => {\n    const errorPayload = {\n        message: error.response.data.message,\n        status: error.response.status,        \n    };\n\n    return {\n        type: DELETE_POST_ERROR,\n        payload: errorPayload,\n    }\n};\n\nexport const fetchPostsSuccess = (posts) => {\n    return {\n        type: FETCH_POSTS,\n        payload: posts,\n    };\n};\n\nconst fetchAllPostsErrors = (error) => {\n    const errorPayload = {\n        message: error.response.data,\n        status: error.response.status,        \n    };\n\n    return {\n        type: FETCH_POSTS_ERROR,\n        payload: errorPayload,\n    };\n};\n\nconst fetchAllPostsLoading = (isLoading) => {\n    return {\n        type: FETCH_POSTS_LOADING,\n        payload: isLoading,\n    };\n};\n\n\n\nexport const fetchAllPosts = () => {\n    let isLoading = true;    \n\n    return async (dispatch) => {\n        if (isLoading) {\n            dispatch(fetchAllPostsLoading(isLoading));\n        }\n\n        try {\n            const response = await axios.get(`${url}`);\n            isLoading = false;\n            dispatch(fetchAllPostsLoading(isLoading));\n            const data = response.data;\n            // console.log(\"Fetch all\",response.data.id);\n            dispatch(fetchPostsSuccess(data));\n        } catch (error) {\n            isLoading = false;\n            dispatch(fetchAllPostsLoading(isLoading));\n            dispatch(fetchAllPostsErrors(error));\n        }\n    };\n};","import React, { Component } from 'react';\nimport Post from '../components/Post';\nimport { Redirect } from \"react-router-dom\";\n\nimport { connect } from 'react-redux';\nimport { deletePost } from '../actions/post.actions';\nimport './Posts.css';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nlet loggedin=true;\nclass Posts extends Component {\n    constructor(props) {\n        super(props);\n        this.handleEdit = this.handleEdit.bind(this);\n        const tokendata = localStorage.getItem(\"token\"); \n        console.log(tokendata);\n        if(tokendata===null){\n            loggedin = false;\n        }\n    }\n    \n\n    handleEdit(post) {\n        this.props.onEdit(post);        \n    }\n\n    render() {      \n        if (this.props.isLoading) {\n            return (<div className=\"spinner-border\" role=\"status\">\n                <span className=\"sr-only\">Data is loading...</span>\n          </div>)\n        } else if (this.props.errors) {\n            return (<div className=\"alert alert-danger\">{this.props.errors}</div>)\n        }\n        else if(!loggedin){\n            alert(\"Unauthorised Access, Please Login and retry\");\n            return <Redirect to=\"/login\" />\n        }\n         else {\n            return (            \n                <div>\n                    <div className=\"btn-container clearfix\">\n                        <Link to=\"/create\" className=\"btn btn-create btn-primary\">Add New</Link>\n                        <Link to=\"/\" className=\"btn btn-create btn-primary\" onClick={()=>(localStorage.removeItem(\"token\"))}>Logout</Link>\n                    </div>\n                    \n                            {\n                                this.props.posts.map((post) => {\n                                    return (\n                                        \n                                        <Post key={post.id} \n                                            post={post} \n                                            onEdit={this.handleEdit}\n                                            onDelete={this.props.onDelete}\n                                        />\n                                    );\n                                })\n                                \n                            }    \n                     \n                </div>\n            );\n        }    \n    }\n}\n\nconst mapStateToProps = state => {\n    let status = '';\n    let message = '';\n\n    if (state.postsData.errors) {\n        status = state.postsData.errors.status;\n        \n        switch (status) {\n            case 404:\n                message+= '404 Not found.';\n                break;\n            case 500: \n                message += '500 Server Error.';\n                break;\n            default:\n                message += 'Error';\n        }\n    } else {\n\n    }\n\n\n    return {\n        errors: message ? message: null,\n        posts: state.postsData.posts,\n        isLoading: state.postsData.isLoading,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onDelete: (id) => {\n            dispatch(deletePost(id));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps) (Posts);","import React from 'react';\nimport './Post.css'\nimport { Image, Button} from 'antd';\nimport Meta from 'antd/lib/card/Meta';\n\nconst HomePost = ({post}) => {console.log(post.title)\n    return (\n        \n       \n        <div className=\"imageCard\">\n        \n        <Meta\n                style={{ fontSize: \"150px\"}}\t\t\t\n                title={post.title}\n            />\n        <hr></hr>\n        \n      \n            \n            <Image align=\"justify\" alt=\"Blog Image\" src={post.image}></Image> \n          \n            <p>Content: {post.content}</p>\n            <h5>Email: {post.email}</h5>\n            <h5>Age Group: {post.agegroup}</h5>\n            <a href={post.link} style= {{align:\"justify\", color:\"#FF002F\"}} > Reference </a>\n            <h5>Category: {post.categories}</h5>\n            \n\n            </div>\n   \n    );\n}\n\nexport default HomePost;","import React, { Component } from 'react';\nimport HomePost from '../components/HomePost';\nimport { connect } from 'react-redux';\nimport './Posts.css';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n   \n    render() {      \n        if (this.props.isLoading) {\n            return (<div className=\"spinner-border\" role=\"status\">\n                <span className=\"sr-only\">Data is loading...</span>\n          </div>)\n        } else if (this.props.errors) {\n            return (<div className=\"alert alert-danger\">{this.props.errors}</div>)\n        } else {\n            return (            \n                <div>\n                    \n                    \n                            {\n                                this.props.posts.map((post) => {\n                                    return (\n                                        <HomePost key={post.id} \n                                            post={post} \n                                            \n                                        />\n                                    );\n                                })\n                                \n                            }    \n                     \n                </div>\n            );\n        }    \n    }\n}\n\nconst mapStateToProps = state => {\n    let status = '';\n    let message = '';\n\n    if (state.postsData.errors) {\n        status = state.postsData.errors.status;\n        \n        switch (status) {\n            case 404:\n                message+= '404 Not found.';\n                break;\n            case 500: \n                message += '500 Server Error.';\n                break;\n            default:\n                message += 'Error';\n        }\n    } else {\n\n    }\n\n\n    return {\n        errors: message ? message: null,\n        posts: state.postsData.posts,\n        isLoading: state.postsData.isLoading,\n    };\n};\n\n\n\nexport default connect(mapStateToProps) (Home);","import React, { Component } from 'react';\nimport { createPost } from '../actions/post.actions';\nimport { connect } from 'react-redux';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport './CreatePost.css';\n\nclass CreatePost extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            id: 0,\n            title: '',\n            content: '',\n            categories: '',\n            link: '',\n            image: '',\n            agegroup: '',\n            errors: null,\n        }; \n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        this.props.onAdd(this.state);\n        this.handleReset(e);        \n    }\n\n    handleValueChange(e) {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleReset(e) {\n        e.preventDefault();\n        this.setState({\n            id: 0,\n            title: '',\n            content: '',\n            categories: '',\n            link: '',\n            image: '',\n            agegroup: '',\n            errors: null,\n        });\n    }\n\n    componentWillMount() {\n        if (this.props.location && this.props.location.state && this.props.location.state.post) {\n            const post = this.props.location.state.post;\n\n            this.setState({\n                id: post.id,\n                title: post.title,\n                content: post.content,\n                agegroup: post.agegroup,\n                image: post.image,\n                link: post.link,\n                categories:post.categories,\n                errors: null,\n            });    \n        }         \n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"btn-container clearfix\">\n                     <Link to=\"/blogs\" className=\"btn btn-home btn-primary\">Back</Link>\n                </div>\n                \n                {this.props.errors && this.props.errors.message ? <div className=\"alert alert-danger\">{this.props.errors.message}</div> : ''}\n                <form onSubmit={this.handleSubmit.bind(this)}>\n                    <div className=\"form-group\">\n                        <input type=\"text\" \n                                name=\"title\"\n                                className=\"form-control\"    \n                                placeholder=\"Enter Title\" \n                                defaultValue={this.props.post.title}    \n                                value={this.state.title}    \n                                onChange={this.handleValueChange.bind(this)}                                           \n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <input type=\"text\" \n                                name=\"content\"\n                                className=\"form-control\"   \n                                defaultValue={this.props.post.content} \n                                placeholder=\"Enter Content\"  \n                                value={this.state.content}  \n                                onChange={this.handleValueChange.bind(this)}                     \n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <input type=\"number\" \n                                name=\"agegroup\"\n                                className=\"form-control\"  \n                                defaultValue={this.props.post.agegroup} \n                                placeholder=\"Enter Age Group\" \n                                value={this.state.agegroup}  \n                                onChange={this.handleValueChange.bind(this)}                       \n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <button type=\"submit\" \n                                className=\"btn btn-success\">\n                                {this.state.id ? 'Update': 'Add'}  \n                        </button>\n                        <button type=\"button\" \n                                className=\"btn btn-default\" \n                                onClick={this.handleReset.bind(this)}>Clear</button>\n                    </div>                \n                </form>\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => {        \n    return {\n        errors: state.postsData.errors,\n        posts: state.postsData.posts,\n        isLoading: state.postsData.isLoading,\n    }\n};\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n      onAdd: (post) => {\n        dispatch(createPost(post));\n      }\n    };\n  };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreatePost);","import React, { Component } from 'react';\nimport { createPost } from '../actions/post.actions';\nimport { connect } from 'react-redux';\nimport { BrowserRouter as  Link } from \"react-router-dom\";\nimport './EditPost.css';\n\nclass EditPost extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            id: props.post.id,\n            title: props.post.title,\n            content: props.post.content,\n            categories: props.post.categories,\n            link: props.post.link,\n            image: props.post.image,\n            agegroup: props.post.agegroup,\n            errors: null,\n        }; \n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        this.props.onAdd(this.state,);\n        this.handleReset(e);        \n    }\n\n    handleValueChange(e) {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleReset(e) {\n        e.preventDefault();\n        this.setState({\n            id: this.state.id,\n            title: '',\n            content: '',\n            categories: this.state.categories,\n            link: this.state.link,\n            image: this.state.image,\n            agegroup: '',\n            errors: null,\n        });\n    }\n\n    componentWillMount() {\n        if (this.props.location && this.props.location.state && this.props.location.state.post) {\n            const post = this.props.location.state.post;\n\n            this.setState({\n                id: post.id,\n                title: post.title,\n                content: post.content,\n                agegroup: post.agegroup,\n                image: post.image,\n                link: post.link,\n                categories:post.categories,\n                errors: null,\n            });    \n        }         \n    }\n\n    render() {\n        return (\n            <div>\n                <div >\n                     <Link to=\"/blogs\">Back</Link>\n                </div>\n                \n                {this.props.errors && this.props.errors.message ? <div className=\"alert alert-danger\">{this.props.errors.message}</div> : ''}\n                <form onSubmit={this.handleSubmit.bind(this)}>\n                    <div className=\"form-group\">\n                        <input type=\"text\" \n                                name=\"title\"\n                                className=\"form-control\"    \n                                placeholder={this.state.title}   \n                                value={this.state.title}    \n                                onChange={this.handleValueChange.bind(this)}                                           \n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <input type=\"text\" \n                                name=\"content\"\n                                className=\"form-control\"    \n                                placeholder={this.state.content}\n                                value={this.state.content}  \n                                onChange={this.handleValueChange.bind(this)}                     \n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <input type=\"number\" \n                                name=\"agegroup\"\n                                className=\"form-control\"   \n                                placeholder={this.state.agegroup}\n                                value={this.state.agegroup}  \n                                onChange={this.handleValueChange.bind(this)}                       \n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <button type=\"submit\" \n                                className=\"btn btn-success\">\n                                {this.state.id ? 'Update': 'Add'}  \n                        </button>\n                        <button type=\"button\" \n                                className=\"btn btn-default\" \n                                onClick={this.handleReset.bind(this)}>Clear</button>\n                    </div>                \n                </form>\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => {        \n    return {\n        errors: state.postsData.errors,\n        posts: state.postsData.posts,\n        isLoading: state.postsData.isLoading,\n    }\n};\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n      onAdd: (post) => {\n        dispatch(createPost(post));\n      }\n    };\n  };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditPost);","import React, {Component } from 'react';\nimport './App.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter as Router, Route, Switch, Link} from \"react-router-dom\";\nimport 'antd/dist/antd.css';\nimport Login from './components/login';\nimport Registration from './components/register';\n\nimport Posts from './containers/Posts';\nimport Home from './containers/Home';\n\nimport CreatePost from './containers/CreatePost';\nimport EditPost from './containers/EditPost';\n\nimport { history } from './index';\n\n\nimport { Layout,Menu} from 'antd';\nconst {Content, Header, Footer } = Layout;\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    \n    this.handleClick = e => {\n      console.log('click ', e);\n      this.setState({ current: e.key });\n    };\n\n    this.state = {\n      post: null,\n      \n      // current: '/',\n    };\n   \n    this.onEdit = this.onEdit.bind(this);\n  }\n \n\n  onEdit(post) {\n    this.setState({post: post});\n    history.push({\n      pathname: `/edit/${post.id}`,\n      state: { \n        post: post,\n        \n       }\n    });    \n  }\n\n  render() {\n      return (\n        <Router >  \n         <div className=\"App\">\n         <Layout className=\"layout\" >\n    <Header style={{ textAlign: 'center' }}>\n        {/* <div className=\"logo\" /> */}\n      <Menu  theme=\"dark\" mode=\"horizontal\">\n        <Menu.Item key=\"1\">\n          <Link to=\"/\">Blogs Home</Link>\n        </Menu.Item>\n        <Menu.Item key=\"3\">\n          {localStorage.getItem(\"token\")?<Link to='/blogs'>Update Blogs</Link>:<Link to='/login'>Login/Sign Up</Link>}\n        </Menu.Item>\n       \n      </Menu>\n    </Header>\n    \n    <Switch>\n    \n    <Content style={{ padding: '0 20px' }}>\n    <div className=\"site-layout-content\">\n \n          <Route path=\"/\" \n                  exact \n                  render={ (props) => <Home { ...props } \n                    />} \n                />  \n                       \n              <Route path=\"/blogs\" \n                  exact \n                  render={ (props) => <Posts isLogged={props.loggedIn}  { ...props } \n                  onEdit={this.onEdit}  />} \n                />\n              <Route path=\"/create/\"                   \n                  render={ (props) => <CreatePost { ...props } \n                    post={this.state.post}                        \n                  />} \n              />\n              <Route path=\"/edit/:id\"                   \n                  render={ (props) => <EditPost { ...props } \n                    post={this.state.post}                        \n                  />} \n                />\n                <Route path=\"/login\"                   \n                  render={ (props) => <Login { ...props } \n                    post={this.state.post}                        \n                  />} \n                />\n                \n                <Route path=\"/register\"                   \n                  render={ (props) => <Registration { ...props } \n                    post={this.state.post}                        \n                  />} \n                />\n         </div>\n         </Content>\n         </Switch>\n         <Footer style={{ textAlign: 'center' }}>Blog ©2020 by Priya Dharshini</Footer>\n  </Layout>\n  </div>\n   \n        </Router>\n      );\n  }\n}\n\nexport default App;\n\n\n\n\n\n\n ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { ADD_POST, \n    ADD_POST_ERROR,\n    ADD_POST_LOADING,\n    EDIT_POST,       \n    EDIT_POST_ERROR,\n    EDIT_POST_LOADING,  \n    DELETE_POST,\n    DELETE_POST_ERROR,\n    DELETE_POST_LOADING,\n    FETCH_POSTS,     \n    FETCH_POSTS_ERROR,\n    FETCH_POSTS_LOADING\n        } from '../actions/types';\n\nconst defaultState = {\n    posts: [],\n    errors: null,\n    isLoading: true,\n};\n\nconst postReducer = (state = defaultState, action) => {    \n    switch(action.type) {\n        case ADD_POST:            \n            return { ...state, errors: null, posts: [ ...state.posts, action.payload ]};\n        case ADD_POST_ERROR:\n            return { ...state, errors: action.payload };            \n        case EDIT_POST:            \n            const updatedPosts = state.posts.filter(post => post.id != action.payload.id);    \n            return { ...state, errors: null, posts: [...updatedPosts, action.payload ]};   \n        case EDIT_POST_ERROR:\n            return { ...state, errors: action.payload }; \n        case DELETE_POST:\n            const filteredPosts = state.posts.filter(post => post.id != action.payload.id);\n            return { ...state, posts: filteredPosts };\n        case DELETE_POST_ERROR:\n            return { ...state, errors: action.payload }\n        case FETCH_POSTS:  \n            return { ...state, posts: action.payload }\n        case FETCH_POSTS_ERROR:            \n            return { ...state, errors: action.payload }\n        case FETCH_POSTS_LOADING:\n            return { ...state, isLoading: action.payload }\n    //     case 'EDIT_A_POST':\n    //         return state.map((post)=>post.id === action.id ? {...post,editing:!post.editing}:post)\n    //     case 'UPDATE':\n    //         return state.map((post)=>{\n    //     if(post.id === action.id) {\n    //         return {\n    //          ...post,\n    //          title:action.data.newTitle,\n    //          content:action.data.newMessage,\n    //          ageGroup:action.AgeGroup,\n    //          editing: !post.editing\n    //       }\n    //     } else return post;\n    //   })\n        default:\n            return state;\n    }\n};\n\nexport default postReducer;","import { combineReducers } from 'redux';\nimport posts from './postReducer';\n\nexport default combineReducers({\n    postsData: posts,\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore, applyMiddleware } from 'redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nimport { fetchAllPosts } from './actions/index';\nimport { createBrowserHistory } from 'history';\nexport const history = createBrowserHistory({forceRefresh:true});\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nstore.dispatch(fetchAllPosts());\n\nReactDOM.render(\n    <Provider store={store}>\n       \n            <App />\n               \n    </Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}